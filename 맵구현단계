#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <windows.h>

// 키보드 값  
#define UP 0
#define DOWN 1
#define LEFT 2
#define RIGHT 3
#define SUBMIT 4 // 선택(스페이스바)

enum {
	black,
	blue,
	green,
	cyan,
	red,
	purple,
	brown,
	lightgray,
	darkgray,
	lightblue,
	lightgreen,
	lightcyan,
	lightred,
	lightpurple,
	yellow,
	white
};

char tempMap[19][40]; // 맵 임시저장할 배열  
char map[19][40] = { // 쉬운맵  
	// 가로 숫자는 위 배열크기에 맞추어 40개  
	{"11111111111111111111111111111111111111"},
	{"100000000000000000110000000000000000k1"},
	{"101101011k1101011011011010111110101101"},
	{"10000100010001000011000010001000100001"},
	{"11110111010111011111111011101011101111"},
	{"10000100000001010000k01010000000101000"},
	{"11110101101101011101111010110110101111"},
	{"g000000100010kkkkkk000000010001000000G"},
	{"111101010O010101111011101010k010101111"},
	{"0001010111110101p000001010111110101000"},
	{"11110100000001011111111010000000101111"},
	{"10000101111101000011000010111110100001"},
	{"10110000010000011011011000001000001101"},
	{"10010111010111010011001011101011101001"},
	{"11010001k00100010111101000100010001011"},
	{"1000010001000100001100001000100k100001"},
	{"10101111000111101011010111100011110101"},
	{"10000000010000000011000000001000000001"},
	{"11111111111111111111111111111111111111"},

};
// 0 : 통로
// 1 : 벽
// k : 열쇠(아이템)
// q : 탈출구 
// 19 x 19
// m : 몬스터
// g : 옆1
// G : 옆2
// b : 폭탄

int keyControl(void);
void titleDraw(void);
int menuDraw(void);

void infoDraw(void);
void infoDraw2(void);

void init();
void gotoxy(int, int);
void setColor(int, int);
void drawMap(void);
void move(int _x, int _y);
void gLoop(void);
void drawUI(void);

int pX, pY;
int pKey = 0;
int playing = 1;

int main(void)
{
	int menuCode;
	int playing = 1;


	init();
	while (1)
	{
		titleDraw();
		menuCode = menuDraw();

		if (menuCode == 0)
		{
			gLoop();
		}
		else if (menuCode == 1)
		{
			infoDraw();
		}
		else if (menuCode == 2)
		{
			break;
		}
		menuCode = 5;
		system("cls");
	}

	gotoxy(20, 18);
	printf("<게임이 종료되었습니다>");
	_getch();

	return 0;
}

void init(void)
{
	system("mode con cols=63 lines=20 | title Bomber Man");

	HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE); // 콘솔 핸들가져오기 
	CONSOLE_CURSOR_INFO ConsoleCursor;
	ConsoleCursor.bVisible = 0; // false 또는 0 : 숨기기 
	ConsoleCursor.dwSize = 1;
	SetConsoleCursorInfo(consoleHandle, &ConsoleCursor);

	pKey = 0;
	playing = 1;

}

// 커서 위치 이동함수 
void gotoxy(int x, int y)
{
	HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE); // 콘솔 핸들가져오기 
	COORD pos;
	pos.X = x;
	pos.Y = y;
	SetConsoleCursorPosition(consoleHandle, pos);
}

// 첫번째: 텍스트, 두번째: 배경  
void setColor(int forground, int background)
{
	HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE); // 콘솔 핸들가져오기 
	int code = forground + background * 16;
	SetConsoleTextAttribute(consoleHandle, code);
}


int keyControl(void) {
	char temp = _getch();

	if (temp == 'w' || temp == 'W')
	{
		return UP;
	}
	else if (temp == 'a' || temp == 'A')
	{
		return LEFT;
	}
	else if (temp == 's' || temp == 'S')
	{
		return DOWN;
	}
	else if (temp == 'd' || temp == 'D')
	{
		return RIGHT;
	}
	else if (temp == ' ')
	{ // 스페이스바(공백)이 선택 버튼  
		return SUBMIT;
	}
}

void titleDraw(void) {
	printf("\n");
	printf("                   *                                  \n"); // 맨위에 4칸 개행  
	printf("           @@@@     *     @     @  @@@@   @@@@  @@@@  \n");
	printf("           @   @   @@@@   @@   @@  @   @  @     @   @ \n");
	printf("           @@@@   @    @  @ @ @ @  @@@@   @@@@  @@@@  \n");
	printf("           @   @  @    @  @  @  @  @   @  @     @  @  \n");
	printf("           @@@@    @@@@   @     @  @@@@   @@@@  @   @ \n");
	printf("\n");
	printf("                   @     @      @      @   @ \n");
	printf("                   @@   @@     @ @     @@  @ \n");
	printf("                   @ @ @ @    @@@@@    @ @ @ \n");
	printf("                   @  @  @   @     @   @  @@ \n");
}
// 이인구 학우분이 올린 디자인 살짝 변경해봤는데 이상한거 같네요.
//bomber BOMBER

int menuDraw(void) {
	int x = 27;
	int y = 14;
	gotoxy(x - 2, y); // -2 한 이유는 > 를 출력해야하기 때문에  
	printf("> 게임시작");
	gotoxy(x, y + 1);
	printf("게임설명");
	gotoxy(x, y + 2);
	printf("  종료  ");
	while (1) { // 무한반복  j
		int n = keyControl(); // 키보드 이벤트를 키값으로 받아오기  
		switch (n) {
		case UP: { // 입력된 키의 값이 UP인경우 (w) 
			if (y > 14) { // y는 12~14까지만 이동  
				gotoxy(x - 2, y); // x-2 하는 이유는 ">"를 두칸 이전에 출력하기위해  
				printf(" "); // 원래 위치를 지우고  
				gotoxy(x - 2, --y); // 새로 이동한 위치로 이동하여  
				printf(">"); // 다시 그리기  
			}
			break;
		}

		case DOWN: { // 입력된 키의 값이 DOWN인경우 (s) 
			if (y < 16) { // 최대 14  
				gotoxy(x - 2, y);
				printf(" ");
				gotoxy(x - 2, ++y);
				printf(">");
			}
			break;
		}

		case SUBMIT: {
			return y - 14; // 스페이스바(선택)되었을 경우 y-12
			// y 시작 위치가 12였으므로 y-12 를 하면 0, 1, 2 세 숫자를 받을 수 있다. 
		}
		}
	}
}

void infoDraw(void)
{
	system("cls"); // 화면 모두 지우기  
	printf("\n\n");
	printf("                        [ 게임설명 ]\n\n");
	printf("             몬스터들을 피하거나 폭탄으로 물리쳐\n");
	printf("                     열쇠를 얻어 탈출해라\n\n");
	printf("                        [ 조작법 ]\n\n");
	printf("                     이동: W, A, S, D\n\n");
	printf("                     폭탄설치: I, J, K, L\n\n");
	printf("                     선택: 스페이스바\n\n\n");
	printf("             개발자: 6조(강재윤, 이유진, 이인구)\n\n");
	printf("          스페이스바를 누르면 메인화면으로 이동합니다.");

	while (1) {
		if (keyControl() == SUBMIT) {
			break;
		}
	}
}
void drawMap(void)
{
	char temp;
	system("cls");
	int h, w;
	for (h = 0; h < 19; h++)
	{
		for (w = 0; w < 40; w++)
		{
			temp = tempMap[h][w];
			if (temp == '0')
			{
				setColor(black, black);
				printf(" ");
			}
			else if (temp == '1')
			{
				setColor(white, white);
				printf("#");
			}
			else if (temp == 'p')
			{
				//플레이어 X,Y 위치 저장
				pX = w;
				pY = h;
				setColor(cyan, black);
				printf("@");
			}
			else if (temp == 'O')
			{
				setColor(lightgreen, black);
				printf("O");
			}
			else if (temp == 'k')
			{
				setColor(yellow, black);
				printf("*");
			}
			else if (temp == 'l')
			{
				setColor(white, white);
				printf("#");
			}
			else if (temp == 'm')
			{
				setColor(red, black);
				printf("M");
			}
			else if (temp == 'b')
			{
				setColor(purple, black);
				printf("Q");
			}
			else if (temp == 'g')
			{
				setColor(black, black);
				printf(" ");
			}
			else if (temp == 'G')
			{
				setColor(black, black);
				printf(" ");
			}
		}
		printf("\n");
	}
	setColor(white, black);
}

void gLoop(void)
{
	int mKey;
	memcpy(tempMap, map, sizeof(tempMap));
	drawMap();
	while (playing)
	{
		drawUI();
		mKey = keyControl();
		switch (mKey)
		{
		case UP:
			move(0, -1);
			break;
		case DOWN:
			move(0, 1);
			break;
		case RIGHT:
			move(1, 0);
			break;
		case LEFT:
			move(-1, 0);
			break;
		case SUBMIT:
			playing = 0;
		}

	}
	playing = 1;
}

void move(int _x, int _y)
{
	char mapObject = tempMap[pY + _y][pX + _x];
	setColor(white, black);

	if (mapObject == '0')
	{
		gotoxy(pX, pY);
		printf(" ");

		setColor(cyan, black);
		gotoxy(pX + _x, pY + _y);
		printf("@");
		pX += _x;
		pY += _y;
	}
	else if (mapObject == 'b')
	{
		gotoxy(pX, pY);
		printf(" ");

		setColor(cyan, black);
		gotoxy(pX + _x, pY + _y);
		printf("@");
		pX += _x;
		pY += _y;
	}
	//	else if (mapObject == '1')
	//	{
			// 아무일도 하지 않음
	//	}
	else if (mapObject == 'k')
	{
		pKey += 1;
		tempMap[pY + _y][pX + _x] = '0';
		gotoxy(pX + _x, pY + _y);
		printf(" ");

	}
	else if (mapObject == 'l')
	{
		if (pKey > 0)
		{
			pKey--;
			tempMap[9][6] = '0';
			setColor(white, black);
			gotoxy(pX + _x, pY + _y);
			printf(" ");
		}

	}
	else if (mapObject == 'O')
	{
		playing = 0;
		gotoxy(39, 16);
		printf("! 탈출을 축하드립니다 !");
		Sleep(3000);
	}

	else if (mapObject == 'm')
	{
		playing = 0;
		infoDraw2();
	}

	else if (mapObject == 'g')
	{
		gotoxy(pX, pY);
		printf(" ");

		setColor(cyan, black);
		gotoxy(pX + _x + 36, pY + _y);
		printf("@");
		pX += _x + 36;
		pY += _y;
	}
	else if (mapObject == 'G')
	{
		gotoxy(pX, pY);
		printf(" ");

		setColor(cyan, black);
		gotoxy(pX + _x - 36, pY + _y);
		printf("@");
		pX += _x - 36;
		pY += _y;
	}
}

void drawUI(void)
{
	setColor(white, black);
	//gotoxy(0, 20);
	//printf("######################################");

	gotoxy(40, 4);
	printf("플레이어 위치:(%02d,%02d)", pX, pY);

	setColor(yellow, black);
	gotoxy(45, 8);
	printf("열쇠: %d개", pKey);

	setColor(white, black);
}

void infoDraw2(void)
{
	system("cls"); // 화면 모두 지우기  
	printf("\n\n");
	printf(" [ 게임 오버 ]\n\n");
	//printf("########################################################");
	//printf("###       ########################################   ###");
	//printf("                     ####################               ");
	//printf("                          ##########                    ");
	//printf("                          ##########                    ");
	//printf("                         ############                   ");
	//printf("                      ##################                ");
	//printf("                     ####################               ");

	while (1) {
		if (keyControl() == SUBMIT) {
			break;
		}
	}
}
